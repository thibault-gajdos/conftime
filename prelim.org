#+title: RDK bayesian analysis
#+date:

:options_LaTex:
#+options: toc:nil title:t date:t
#+LATEX_HEADER: \RequirePackage[utf8]{inputenc}
#+LATEX_HEADER: \graphicspath{{figures/}}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \hypersetup{
#+LATEX_HEADER:     colorlinks,%
#+LATEX_HEADER:     citecolor=black,%
#+LATEX_HEADER:     filecolor=black,%
#+LATEX_HEADER:     linkcolor=blue,%
#+LATEX_HEADER:     urlcolor=black
#+LATEX_HEADER: }
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage[french]{babel}
#+LATEX_HEADER: \usepackage[style = apa]{biblatex}
#+LATEX_HEADER: \DeclareLanguageMapping{english}{english-apa}
#+LATEX_HEADER: \newcommand\poscite[1]{\citeauthor{#1}'s (\citeyear{#1})}
#+LATEX_HEADER: \addbibresource{~/thib/papiers/thib.bib}
#+LATEX_HEADER: \usepackage[top=2cm,bottom=2.2cm,left=3cm,right=3cm]{geometry}
:END:

:Options_R:
#+property: :session *R*
#+property: header-args:R :exports results
#+property: header-args:R :eval never-export
#+property: header-args:R+ :tangle yes
#+property: header-args:R+ :session
#+property: header-args:R+ :results output 
:end:

# clean output
#+begin_src emacs-lisp
   ;(org-babel-map-src-blocks nil (org-babel-remove-result))
#+end_src

#+RESULTS:

* Maniscalco (2017) 

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
rm(list=ls(all=TRUE))  ## efface les donn√©es
setwd('~/thib/projects/conftime/') 
source('~/thib/projects/tools/R_lib.r')

# * Maniscalco 2017
data <- read_csv('data_Maniscalco_2017_expt1.csv') %>%
    filter(!(Subj_idx %in% c(3,6,9,22))) %>%
    filter(is.nan(RT_dec) == FALSE) %>%
    filter(is.nan(RT_conf) == FALSE) %>%
    mutate(acc = (Stimulus == Response)) %>%
    filter(acc == 1)
d.dec <- data %>%
    select(Subj_idx, RT_dec) %>%
    group_by(Subj_idx) %>%
    summarise(RT_dec = quantile(RT_dec, c(1:100)/100), q =  c(1:100)/100)
d.conf <- data %>%
    select(Subj_idx, RT_conf) %>%
    group_by(Subj_idx) %>%
    summarise(RT_conf = quantile(RT_conf, c(1:100)/100), q =  c(1:100)/100)
d <- full_join(d.dec, d.conf)

d.dec <- d.dec %>%
    rename(RT = RT_dec) %>%
    mutate(type = 'dec')
d.conf <- d.conf %>%
    rename(RT = RT_conf) %>%
    mutate(type = 'conf')
d.dist <- rbind(d.dec,d.conf)
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file maniscalco_density.png :exports results 
plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density()+ 
    facet_wrap(~ Subj_idx, scales = 'free')
plot
#+END_SRC

#+RESULTS:
[[file:maniscalco_density.png]]


#+BEGIN_SRC R  :results output graphics :file maniscalco_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
    geom_line() +
    geom_abline(aes(slope = 1, intercept = 0), linetype = 2) +
    facet_wrap(~ Subj_idx, scales = 'free')
plot
#+END_SRC

#+RESULTS:
[[file:maniscalco_qqplot.png]]


* Gherman  (2018) 

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
data <- read_csv('data_Gherman_2018.csv') %>%
    filter(is.nan(RT_dec) == FALSE) %>%
    filter(is.nan(RT_conf) == FALSE) %>%
    filter(Excluded_subj == 0) %>%
    mutate(acc = (Stimulus == Response)) %>%
    filter(acc == 1)
d.dec <- data %>%
    select(Subj_idx, RT_dec) %>%
    group_by(Subj_idx) %>%
    summarise(RT_dec = quantile(RT_dec, c(1:100)/100), q =  c(1:100)/100)
d.conf <- data %>%
    select(Subj_idx, RT_conf) %>%
    group_by(Subj_idx) %>%
    summarise(RT_conf = quantile(RT_conf, c(1:100)/100), q =  c(1:100)/100)
d <- full_join(d.dec, d.conf)

d.dec <- d.dec %>%
    rename(RT = RT_dec) %>%
    mutate(type = 'dec')
d.conf <- d.conf %>%
    rename(RT = RT_conf) %>%
    mutate(type = 'conf')
d.dist <- rbind(d.dec,d.conf)
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file gherman_density.png :exports results 
plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density()+ 
    facet_wrap(~ Subj_idx, scales = 'free')
plot
#+END_SRC

#+RESULTS:
[[file:gherman_density.png]]


#+BEGIN_SRC R  :results output graphics :file gherman_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
    geom_line() +
    geom_abline(aes(slope = 1, intercept = 0), linetype = 2) +
    facet_wrap(~ Subj_idx, scales = 'free')
plot
#+END_SRC

#+RESULTS:
[[file:gherman_qqplot.png]]


* Hainguerlot  (2018) 

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
  data <- read_csv('data_Hainguerlot_2018.csv') %>%
      filter(is.nan(RT_dec) == FALSE) %>%
      filter(is.nan(RT_conf) == FALSE) %>%
      mutate(acc = (Stimulus == Response)) %>%
      filter(acc == 1)
  d.dec <- data %>%
      select(Subj_idx, RT_dec) %>%
      group_by(Subj_idx) %>%
      summarise(RT_dec = quantile(RT_dec, c(1:100)/100), q =  c(1:100)/100)
  d.conf <- data %>%
      select(Subj_idx, RT_conf) %>%
      group_by(Subj_idx) %>%
      summarise(RT_conf = quantile(RT_conf, c(1:100)/100), q =  c(1:100)/100)
  d <- full_join(d.dec, d.conf)

  d.dec <- d.dec %>%
      rename(RT = RT_dec) %>%
      mutate(type = 'dec')
  d.conf <- d.conf %>%
      rename(RT = RT_conf) %>%
      mutate(type = 'conf')
  d.dist <- rbind(d.dec,d.conf)
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file hainguerlot_density.png :exports results 
plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density()+ 
    facet_wrap(~ Subj_idx, scales = 'free')
plot
#+END_SRC

#+RESULTS:
[[file:hainguerlot_density.png]]


#+BEGIN_SRC R  :results output graphics :file hainguerlot_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
    geom_line() +
    geom_abline(aes(slope = 1, intercept = 0), linetype = 2) +
    facet_wrap(~ Subj_idx, scales = 'free')
plot
#+END_SRC

#+RESULTS:
[[file:hainguerlot_qqplot.png]]


* Locke  (2020) 

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none
  data <- read_csv('data_Locke_2020.csv') %>%
    filter(is.nan(RT_dec) == FALSE) %>%
    filter(is.nan(RT_conf) == FALSE) %>%
    filter(Training == 0) %>%
    mutate(acc = (Stimulus == Response)) %>%
    filter(acc == 1) %>%
    filter(Condition == 1) %>%
    filter(RT_dec < 2, RT_conf <2) 

  d.dec <- data %>%
      select(Subj_idx, RT_dec) %>%
      group_by(Subj_idx) %>%
      summarise(RT_dec = quantile(RT_dec, c(1:100)/100), q =  c(1:100)/100)
  d.conf <- data %>%
      select(Subj_idx, RT_conf) %>%
      group_by(Subj_idx) %>%
      summarise(RT_conf = quantile(RT_conf, c(1:100)/100), q =  c(1:100)/100)
  d <- full_join(d.dec, d.conf)

  d.dec <- d.dec %>%
      rename(RT = RT_dec) %>%
      mutate(type = 'dec')
  d.conf <- d.conf %>%
      rename(RT = RT_conf) %>%
      mutate(type = 'conf')
  d.dist <- rbind(d.dec,d.conf)
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file Locke_density.png :exports results 
  plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
      geom_density()+ 
      facet_wrap(~ Subj_idx, scales = 'free')
  plot
#+END_SRC

#+RESULTS:
[[file:Locke_density.png]]


#+BEGIN_SRC R  :results output graphics :file Locke_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
    geom_line() +
    geom_abline(aes(slope = 1, intercept = 0), linetype = 2) +
    facet_wrap(~ Subj_idx, scales = 'free')
plot
#+END_SRC 

#+RESULTS:
[[file:Locke_qqplot.png]]
