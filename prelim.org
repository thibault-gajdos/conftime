#+title: RDK bayesian analysis
#+date:

:options_LaTex:
#+options: toc:nil title:t date:t
#+LATEX_HEADER: \RequirePackage[utf8]{inputenc}
#+LATEX_HEADER: \graphicspath{{figures/}}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \hypersetup{
#+LATEX_HEADER:     colorlinks,%
#+LATEX_HEADER:     citecolor=black,%
#+LATEX_HEADER:     filecolor=black,%
#+LATEX_HEADER:     linkcolor=blue,%
#+LATEX_HEADER:     urlcolor=black
#+LATEX_HEADER: }
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage[french]{babel}
#+LATEX_HEADER: \usepackage[style = apa]{biblatex}
#+LATEX_HEADER: \DeclareLanguageMapping{english}{english-apa}
#+LATEX_HEADER: \newcommand\poscite[1]{\citeauthor{#1}'s (\citeyear{#1})}
#+LATEX_HEADER: \addbibresource{~/thib/papiers/thib.bib}
#+LATEX_HEADER: \usepackage[top=2cm,bottom=2.2cm,left=3cm,right=3cm]{geometry}
:END:

:Options_R:
#+property: :session *R*
#+property: header-args:R :exports results
# #+property: header-args:R :eval never-export
#+property: header-args:R+ :tangle yes
#+property: header-args:R+ :session
#+property: header-args:R+ :results output 
:end:

#+PANDOC_OPTIONS: self-contained:t

# clean output
#+begin_src emacs-lisp :exports none
  (org-babel-map-src-blocks nil (org-babel-remove-result))
#+end_src

#+RESULTS:
: 1165


* Maniscalco (2017) 

Circular patches of white noise were presented to the left and right of fixation for 33 ms. A sinusoidal grating was embedded in either the left or right patch of noise. The subject's task was to indicate which patch contained the grating, left or right, with a keypress.

After entering the stimulus discrimination response, subjects rated confidence in the accuracy of their response on a scale of 1 to 4, with 4 being highest. No absolute meaning was attributed to the numbers on the scale, but rather, they indicated relative levels of confidence for stimulus judgments made in this particular experiment. Thus, subjects were encouraged to use all parts of the confidence scale at least some of the time. 

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
  rm(list=ls(all=TRUE))  ## efface les donn√©es
  setwd('~/thib/projects/conftime/') 
  source('~/thib/projects/tools/R_lib.r')
  library('pander')

  data <- read_csv('data_Maniscalco_2017_expt1.csv') %>%
      filter(!(Subj_idx %in% c(3,6,9,22))) %>%
      filter(is.nan(RT_dec) == FALSE) %>%
      filter(is.nan(RT_conf) == FALSE) %>%
      mutate(acc = (Stimulus == Response)) %>%
      filter(acc == 1, RT_dec < 2, RT_conf <2)
  d.dec <- data %>%
      select(Subj_idx, RT_dec) %>%
      group_by(Subj_idx) %>%
      summarise(RT_dec = quantile(RT_dec, c(1:9)/10), q =  c(1:9)/10)
  d.conf <- data %>%
      select(Subj_idx, RT_conf) %>%
      group_by(Subj_idx) %>%
      summarise(RT_conf = quantile(RT_conf, c(1:9)/10), q =  c(1:9)/10) 
  d <- full_join(d.dec, d.conf) %>%
    group_by(q) %>%
    summarise(RT_conf = mean(RT_conf), RT_dec = mean(RT_dec))

  d.dec <- data %>%
      select(RT_dec, Subj_idx) %>%
      rename(RT = RT_dec) %>%
      mutate(type = 'dec')
  d.conf <- data %>%
    select(RT_conf, Subj_idx) %>%
    rename(RT = RT_conf) %>%
    mutate(type = 'conf')
  d.dist <- rbind(d.dec, d.conf)

  d.corr <- data %>%
    group_by(Subj_idx) %>%
    summarise(corr = cor(RT_conf,RT_dec, method="pearson"))
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file maniscalco_density.png :exports results 
  plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density() +
    facet_wrap(~Subj_idx, scale = 'free')   
  plot
#+END_SRC

#+RESULTS:
[[file:maniscalco_density.png]]


#+BEGIN_SRC R  :results output graphics :file maniscalco_qqplot.png :exports results 
  plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
    geom_line() +
    geom_point() +
    geom_smooth(method='lm', se = FALSE)  
  plot
#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d, style = 'rmarkdown')
#+END_SRC



#+BEGIN_SRC R  :results output graphics :file maniscalco_corr.png :exports results 
  plot <- ggplot(data = d.corr, mapping = aes(x = Subj_idx, y = corr)) +
    geom_point() +
    geom_hline(aes(yintercept = mean(corr)), color="blue") +
    ylim(-1,1) +
    annotate(geom = 'text', x = 15, y = 0.8, label = paste('mean correlation = ', round(mean(d.corr$corr),2),sep = ''))
print(plot)
#+END_SRC

#+RESULTS:
[[file:maniscalco_corr.png]]

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d.corr, style = 'rmarkdown')
#+END_SRC

* Gherman  (2018) 

Stimulus type: Random dot kinematogram, with coherent motion either leftwards or rightwards (1=left; 2=right).

Confidence scale: post-decisional confidence ratings, using a discrete 9-point scale (1=guess; 9=certain)


#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
  data <- read_csv('data_Gherman_2018.csv') %>%
      filter(is.nan(RT_dec) == FALSE) %>%
      filter(is.nan(RT_conf) == FALSE) %>%
      filter(Excluded_subj == 0) %>%
      mutate(acc = (Stimulus == Response)) %>%
      filter(acc == 1, RT_conf < 2, RT_dec < 2)
  d.dec <- data %>%
	select(Subj_idx, RT_dec) %>%
	group_by(Subj_idx) %>%
	summarise(RT_dec = quantile(RT_dec, c(1:9)/10), q =  c(1:9)/10)
  d.conf <- data %>%
	select(Subj_idx, RT_conf) %>%
	group_by(Subj_idx) %>%
	summarise(RT_conf = quantile(RT_conf, c(1:9)/10), q =  c(1:0)/100)
  d <- full_join(d.dec, d.conf) %>%
      group_by(q) %>%
      summarise(RT_conf = mean(RT_conf), RT_dec = mean(RT_dec))

  d.dec <- data %>%
	select(RT_dec, Subj_idx) %>%
	rename(RT = RT_dec) %>%
	mutate(type = 'dec')
  d.conf <- data %>%
      select(RT_conf, Subj_idx) %>%
      rename(RT = RT_conf) %>%
      mutate(type = 'conf')
  d.dist <- rbind(d.dec, d.conf)

  d.corr <- data %>%
    group_by(Subj_idx) %>%
    summarise(corr = cor(RT_conf,RT_dec, method="pearson"))
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file gherman_density.png :exports results 
  plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density() +
    facet_wrap(~Subj_idx, scale = 'free')   
  plot
#+END_SRC


#+BEGIN_SRC R  :results output graphics :file gherman_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
  geom_line() +
  geom_point() +
  geom_smooth(method='lm', se = FALSE)  
plot
#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d, style = 'rmarkdown')
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file gherman.png :exports results 
  plot <- ggplot(data = d.corr, mapping = aes(x = Subj_idx, y = corr)) +
    geom_point() +
    geom_hline(aes(yintercept = mean(corr)), color="blue") +
    ylim(-1,1) +
    annotate(geom = 'text', x = 15, y = 0.8, label = paste('mean correlation = ', round(mean(d.corr$corr),2),sep = ''))

 plot
#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d.corr, style = 'rmarkdown')
#+END_SRC

* Hainguerlot  (2018) 

- Stimulus: On each trial, after a 250ms fixation cross, two sets of about 100 dots were simultaneously presented for 700ms, one on the left side and one on the right side of the computer screen (stimulus is coded as 1 if the left set contained more dots and 2 if the right set contained more dots). 
Participants had to indicate which set contained more dots (subject's response is coded as 1 if responded "left" and 2 if responded "right"). After the response, the inter-trial interval was jittered between 0.5s and 1.5s. 

 Confidence scale: Each response was followed by a confidence rating, in which participants indicated their subjective belief that their response just given was correct, on a 6 steps scale ranging from 50% confident (i.e. guess) to 100% confident, in 6 steps of 10% (confidence answer is coded from 0.5 for 50% confident to 1 for 100% confident).

- Response device: Participants indicated their response by pressing the corresponding arrow on the keyboard (left or right). Participants indicated their confidence rating by using the numerical keys on the top-left of the keyboard. 

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
  data <- read_csv('data_Hainguerlot_2018.csv') %>%
      filter(is.nan(RT_dec) == FALSE) %>%
      filter(is.nan(RT_conf) == FALSE) %>%
      mutate(acc = (Stimulus == Response)) %>%
      filter(acc == 1, RT_dec < 2, RT_conf < 2)
 d.dec <- data %>%
      select(Subj_idx, RT_dec) %>%
      group_by(Subj_idx) %>%
      summarise(RT_dec = quantile(RT_dec, c(1:9)/10), q =  c(1:9)/10)
  d.conf <- data %>%
      select(Subj_idx, RT_conf) %>%
      group_by(Subj_idx) %>%
      summarise(RT_conf = quantile(RT_conf, c(1:9)/10), q =  c(1:9)/10)
  d <- full_join(d.dec, d.conf) %>%
    group_by(q) %>%
    summarise(RT_conf = mean(RT_conf), RT_dec = mean(RT_dec))

  d.dec <- data %>%
      select(RT_dec, Subj_idx) %>%
      rename(RT = RT_dec) %>%
      mutate(type = 'dec')
  d.conf <- data %>%
    select(RT_conf, Subj_idx) %>%
    rename(RT = RT_conf) %>%
    mutate(type = 'conf')
  d.dist <- rbind(d.dec, d.conf)

  d.corr <- data %>%
    group_by(Subj_idx) %>%
    summarise(corr = cor(RT_conf,RT_dec, method="pearson"))
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file hainguerlot_density.png :exports results 
  plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density() +
    facet_wrap(~Subj_idx, scale = 'free')
  plot
#+END_SRC


#+BEGIN_SRC R  :results output graphics :file hainguerlot_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
  geom_line() +
  geom_point() +
  geom_smooth(method='lm', se = FALSE)  
plot

#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d, style = 'rmarkdown')
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file hainguerlot_2018_corr.png :exports results 
  plot <- ggplot(data = d.corr, mapping = aes(x = Subj_idx, y = corr)) +
    geom_point() +
    geom_hline(aes(yintercept = mean(corr)), color="blue") +
    ylim(-1,1) +
    annotate(geom = 'text', x = 15, y = 0.8, label = paste('mean correlation = ', round(mean(d.corr$corr),2),sep = ''))

 plot
#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d.corr, style = 'rmarkdown')
#+END_SRC

* Hainguerlot  (unpub) 

- Stimulus: On each trial, after a 250ms fixation cross, two sets of about 100 dots were simultaneously presented for 700ms, one on the left side and one on the right side of the computer screen (stimulus is coded as 1 if the left set contained more dots and 2 if the right set contained more dots). Participants had to indicate which set contained more dots (subject's response is coded as 1 if responded "left" and 2 if responded "right"). After the response, the inter-trial interval was jittered between 0.5s and 1.5s. 

- Confidence scale: Each response was followed by a confidence rating, in which participants indicated their subjective belief that their response just given was correct, on a 6 steps scale ranging from 50% confident (i.e. guess) to 100% confident, in 6 steps of 10% (confidence answer is coded from 0.5 for 50% confident to 1 for 100% confident)

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none 
  data <- read_csv('data_Hainguerlot_unpub.csv') %>%
      filter(is.nan(RT_dec) == FALSE) %>%
      filter(is.nan(RT_conf) == FALSE) %>%
      mutate(acc = (Stimulus == Response)) %>%
      filter(acc == 1, RT_dec < 2, RT_conf < 2)
 d.dec <- data %>%
      select(Subj_idx, RT_dec) %>%
      group_by(Subj_idx) %>%
      summarise(RT_dec = quantile(RT_dec, c(1:9)/10), q =  c(1:9)/10)
  d.conf <- data %>%
      select(Subj_idx, RT_conf) %>%
      group_by(Subj_idx) %>%
      summarise(RT_conf = quantile(RT_conf, c(1:9)/10), q =  c(1:9)/10)
  d <- full_join(d.dec, d.conf) %>%
    group_by(q) %>%
    summarise(RT_conf = mean(RT_conf), RT_dec = mean(RT_dec))

  d.dec <- data %>%
      select(RT_dec, Subj_idx) %>%
      rename(RT = RT_dec) %>%
      mutate(type = 'dec')
  d.conf <- data %>%
    select(RT_conf, Subj_idx) %>%
    rename(RT = RT_conf) %>%
    mutate(type = 'conf')
  d.dist <- rbind(d.dec, d.conf)

  d.corr <- data %>%
    group_by(Subj_idx) %>%
    summarise(corr = cor(RT_conf,RT_dec, method="pearson"))
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file hainguerlot_unpub_density.png :exports results 
  plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density() +
    facet_wrap(~Subj_idx, scale = 'free')
  plot
#+END_SRC


#+BEGIN_SRC R  :results output graphics :file hainguerlot_unoub_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
  geom_line() +
  geom_point() +
  geom_smooth(method='lm', se = FALSE)  
plot
#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d, style = 'rmarkdown')
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file hainguerlot_unpub_corr.png :exports results 
  plot <- ggplot(data = d.corr, mapping = aes(x = Subj_idx, y = corr)) +
    geom_point() +
    geom_hline(aes(yintercept = mean(corr)), color="blue") +
    ylim(-1,1) +
    annotate(geom = 'text', x = 15, y = 0.8, label = paste('mean correlation = ', round(mean(d.corr$corr),2),sep = ''))

 plot
#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d.corr, style = 'rmarkdown')
#+END_SRC

* Locke  (2020) 

Gabor patch tilted slightly left (Stimulus=0) or right (Stimulus=1) of vertical. Response is left (Response=0) or right (Response=1). Training/thresholding (Training=1; Session=0; Condition=0) was performed for each participant, then fixed for the main experiment (Training=0; Session>1; Condition>1). Difficulty is the absolute orientation magnitude displayed in degrees. Gabor spatial frequency was 2 cycles/deg, peak contrast 10%, Gaussian envelope (.5 deg SD), randomized phase.

Subjective confidence in probability correct, either low (Confidence=0) or high (Confidence=1). Confidence was not extrinsically rewarded (e.g., with points). No confidence judgments during Training.

Correct/incorrect feedback was provided on every trial

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none
  data <- read_csv('data_Locke_2020.csv') %>%
    filter(is.nan(RT_dec) == FALSE) %>%
    filter(is.nan(RT_conf) == FALSE) %>%
    filter(Training == 0) %>%
    mutate(acc = (Stimulus == Response)) %>%
    filter(acc == 1) %>%
    filter(Condition == 1) %>%
    filter(RT_dec < 2, RT_conf <2) 

 d.dec <- data %>%
      select(Subj_idx, RT_dec) %>%
      group_by(Subj_idx) %>%
      summarise(RT_dec = quantile(RT_dec, c(1:9)/10), q =  c(1:9)/10)
  d.conf <- data %>%
      select(Subj_idx, RT_conf) %>%
      group_by(Subj_idx) %>%
      summarise(RT_conf = quantile(RT_conf, c(1:9)/10), q =  c(1:9)/10)
  d <- full_join(d.dec, d.conf) %>%
    group_by(q) %>%
    summarise(RT_conf = mean(RT_conf), RT_dec = mean(RT_dec))

  d.dec <- data %>%
      select(RT_dec, Subj_idx) %>%
      rename(RT = RT_dec) %>%
      mutate(type = 'dec')
  d.conf <- data %>%
    select(RT_conf, Subj_idx) %>%
    rename(RT = RT_conf) %>%
    mutate(type = 'conf')
  d.dist <- rbind(d.dec, d.conf)

  d.corr <- data %>%
    group_by(Subj_idx) %>%
    summarise(corr = cor(RT_conf,RT_dec, method="pearson"))
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file Locke_density.png :exports results 
  plot <- ggplot(data = d.dist, mapping = aes(x = RT, colour = type)) +
    geom_density() +
    facet_wrap(~ Subj_idx, scale = 'free') 
  plot
#+END_SRC


#+BEGIN_SRC R  :results output graphics :file Locke_qqplot.png :exports results 
plot <- ggplot(data = d, mapping = aes(x = RT_dec, y = RT_conf)) + 
  geom_line() +
  geom_point() +
  geom_smooth(method='lm', se = FALSE)  
plot

#+END_SRC 

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d, style = 'rmarkdown')
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file Locke_corr.png :exports results 
  plot <- ggplot(data = d.corr, mapping = aes(x = Subj_idx, y = corr)) +
    geom_point() +
    geom_hline(aes(yintercept = mean(corr)), color="blue") +
    ylim(-1,1) +
    annotate(geom = 'text', x = 6, y = 0.8, label = paste('mean correlation = ', round(mean(d.corr$corr),2),sep = ''))

 plot
#+END_SRC

#+BEGIN_SRC R :results output  :exports results
  pandoc.table(d.corr, style = 'rmarkdown')
#+END_SRC

* Simulation

We simulate two distribution: a gaussian (mean = 300, sd = 60) and weibull (mean = 300, shape = 8). Although very different, when considering deciles, qqplot look almost linear... Caution thus required!

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none
  x_norm <- rnorm(500, mean = 300, sd = 150) 
  x_weib <- rweibull(500, shape = 15, scale = 300)
  data <- data.frame(norm = x_norm, weib = x_weib)
  dec_norm <- quantile(x_norm, c(1:9)/10)
  dec_weib <- quantile(x_weib, c(1:9)/10)
  d <- data.frame(q = c(1:9)/10, norm = dec_norm, weib = dec_weib)
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file sim_qqplot.png :exports results 
  plot <- ggplot(data = d, mapping = aes(x = dec_norm, y = dec_weib)) + 
    geom_line() +
    geom_point() +
    geom_smooth(method='lm', se = FALSE)  
  plot
#+END_SRC 




#+BEGIN_SRC R  :results none  :tangle yes  :session :exports none
  data <- data.frame(norm = x_norm, weib = x_weib)
  d.dist <- data %>%
    select(-weib) %>%
    mutate(type = 'norm') %>%
    rename(x = norm)
  d.dist2 <- data %>%
    select(-norm) %>%
    mutate(type = 'weib') %>%
    rename(x = weib)
  data <- rbind(d.dist, d.dist2)
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file sim_density.png :exports results 
  plot <- ggplot(data = data, mapping = aes(x = x, colour = type)) +
    geom_density() 
  plot
#+END_SRC

This is clear if you look at a qqplot with centiles.

#+BEGIN_SRC R  :results none  :tangle yes  :session :exports code
  data <- data.frame(norm = x_norm, weib = x_weib)
  dec_norm <- quantile(x_norm, c(1:100)/100)
  dec_weib <- quantile(x_weib, c(1:100)/100)
  d <- data.frame(q = c(1:100)/100, norm = dec_norm, weib = dec_weib)
#+END_SRC

#+BEGIN_SRC R  :results output graphics :file sim_qqplot2.png :exports results 
  plot <- ggplot(data = d, mapping = aes(x = dec_norm, y = dec_weib)) + 
    geom_line() +
    geom_point() +
    geom_smooth(method='lm', se = FALSE)  
  plot
#+END_SRC 


